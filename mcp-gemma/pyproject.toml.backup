[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-gemma"
version = "1.0.0"
description = "Model Context Protocol server for gemma.cpp integration"
authors = [
    {name = "LLM Development Team", email = "dev@example.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["mcp", "gemma", "llm", "ai", "server"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "aiohttp>=3.8.0",
    "aiohttp-cors>=0.7.0",
    "websockets>=11.0.0",
    "redis>=4.5.0",
    "pyyaml>=6.0",
    "sentence-transformers>=2.2.0",
    "numpy>=1.21.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.0.250",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
enhanced = [
    "faiss-cpu>=1.7.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "spacy>=3.5.0",
]
monitoring = [
    "opentelemetry-api>=1.15.0",
    "opentelemetry-sdk>=1.15.0",
    "prometheus-client>=0.15.0",
    "structlog>=22.0.0",
]
performance = [
    "orjson>=3.8.0",
    "msgpack>=1.0.0",
    "lz4>=4.0.0",
    "uvloop>=0.17.0;sys_platform!='win32'",
]

[project.scripts]
mcp-gemma = "server.main:main"
mcp-gemma-client = "client.cli:main"

[project.urls]
Homepage = "https://github.com/llm-dev/mcp-gemma"
Documentation = "https://mcp-gemma.readthedocs.io"
Repository = "https://github.com/llm-dev/mcp-gemma.git"
Issues = "https://github.com/llm-dev/mcp-gemma/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["server*", "client*", "integration*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "sentence_transformers.*",
    "websockets.*",
    "aiohttp.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["server", "client", "integration"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]