{
  "permissions": {
    "allow": [
      "Bash(cmake:*)",
      "Bash(\"/c/Program Files/CMake/bin/cmake.exe\" --version)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" --preset windows-release)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" -B build -G \"Visual Studio 17 2022\" -T v143)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" -B build -G Ninja -DCMAKE_BUILD_TYPE=Release)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" --build build --config Release --parallel 10)",
      "Bash(Select-Object -Last 30)",
      "Bash(if not exist deploy mkdir deploy)",
      "Bash(if not exist deployexamples mkdir deployexamples)",
      "Bash(New-Item -ItemType Directory -Force -Path deploy/examples)",
      "Bash(Out-Null)",
      "Bash(Write-Output \"Directory structure created\")",
      "Bash(./gemma.exe --help)",
      "Read(//c/codedev/llm/.models/gemma-gemmacpp-2b-it-v3//**)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(cat:*)",
      "Read(//c/tmp/**)",
      "Bash(./gemma.exe:*)",
      "Bash(timeout:*)",
      "Bash(powershell.exe:*)",
      "Bash(export:*)",
      "Bash(\"/c/Program Files/CMake/bin/cmake.exe\" --preset windows-release)",
      "Bash(\"/c/Program Files/CMake/bin/cmake.exe\" -S . -B build_simple -G \"Visual Studio 17 2022\" -A x64 -DCMAKE_BUILD_TYPE=Release)",
      "Bash(tee:*)",
      "Bash(cmd.exe /c \"\"\"C:\\Program Files\\CMake\\bin\\cmake.exe\"\" -S . -B build_simple -G \"\"Visual Studio 17 2022\"\" -A x64 && \"\"C:\\Program Files\\CMake\\bin\\cmake.exe\"\" --build build_simple --config Release --parallel 10\")",
      "Bash(cmd.exe:*)",
      "Read(//c/Program Files (x86)/Microsoft Visual Studio/2022/BuildTools/VC/Tools/MSVC/**)",
      "Bash(/c/codedev/llm/gemma/deploy/gemma.exe --help)",
      "Bash(dir:*)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" -B build -G \"Visual Studio 17 2022\" -T v143 -A x64 -DCMAKE_BUILD_TYPE=Release)",
      "Bash(cmd /c:*)",
      "Bash(if [ -f \"C:\\codedev\\llm\\gemma\\build\\CMakeCache.txt\" ])",
      "Bash(then cat \"C:\\codedev\\llm\\gemma\\build\\CMakeCache.txt\")",
      "Bash(fi)",
      "Bash(if [ -f \"C:/codedev/llm/gemma/build/Release/gemma.exe\" ])",
      "Bash(then ls -lh \"C:/codedev/llm/gemma/build/Release/gemma.exe\")",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" -B build_cpp -G \"Visual Studio 17 2022\" -T v143 -A x64)",
      "Bash(vswhere:*)",
      "Read(//c/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/**)",
      "Bash(./build_with_devcmd.bat)",
      "Bash(./build_fixed.bat)",
      "Bash(where:*)",
      "Bash(test:*)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" --list-presets)",
      "Bash(\"C:\\Program Files\\CMake\\bin\\cmake.exe\" -B build_deploy -G \"Visual Studio 17 2022\" -A x64 -T v143 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CONFIGURATION_TYPES=Release)",
      "Read(//c/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC//**)",
      "Bash(.venv/Scripts/gemma.exe:*)",
      "Bash(while read ts name)",
      "Bash(build/Release/gemma.exe --help)",
      "Bash(grep:*)",
      "Read(//c//**)"
    ],
    "deny": [],
    "ask": []
  }
}