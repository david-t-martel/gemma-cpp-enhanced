#version 450

/**
 * ReLU Activation Compute Shader
 * Optimized implementation: f(x) = max(0, x)
 */

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform UniformBuffer {
    uint size;
} ubo;

layout(set = 0, binding = 1, std430) restrict readonly buffer InputBuffer {
    float input_data[];
};

layout(set = 0, binding = 2, std430) restrict writeonly buffer OutputBuffer {
    float output_data[];
};

void main() {
    uint index = gl_GlobalInvocationID.x;

    if (index >= ubo.size) {
        return;
    }

    output_data[index] = max(0.0, input_data[index]);
}