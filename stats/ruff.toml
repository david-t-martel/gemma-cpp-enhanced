# Ruff configuration file
# https://docs.astral.sh/ruff/configuration/

# Python version target
target-version = "py311"

# Line length settings
line-length = 100
indent-width = 4

# Enable auto-fix for all fixable rules
fix = true

# Include Python files and Jupyter notebooks
include = ["*.py", "*.pyi", "*.ipynb"]

# Exclude patterns
extend-exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[lint]
# Enable rule categories
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "RUF",    # Ruff-specific rules
    "PIE",    # flake8-pie
    "PT",     # flake8-pytest-style
    "ERA",    # eradicate
    "FBT",    # flake8-boolean-trap
    "S",      # flake8-bandit (security)
    "ARG",    # flake8-unused-arguments
    "PL",     # pylint
    "PERF",   # perflint
    "FURB",   # refurb
    "LOG",    # flake8-logging
]

# Ignore specific rules
ignore = [
    "E501",   # Line too long (handled by formatter)
    "B008",   # Do not perform function calls in argument defaults
    "S101",   # Use of assert detected
    "PLR0913", # Too many arguments to function call
    "PLR0912", # Too many branches
    "PLR2004", # Magic value used in comparison
    "FBT001", # Boolean positional arg in function definition
    "FBT002", # Boolean default positional argument in function definition
    "ARG001", # Unused function argument
    "ARG002", # Unused method argument
]

# Rules to fix automatically
fixable = ["ALL"]

# Rules to never auto-fix
unfixable = [
    "F841",   # Unused variables
    "F401",   # Unused imports
]

# Per-file ignores
[lint.per-file-ignores]
"tests/*" = [
    "S101",   # Use of assert detected (fine in tests)
    "PLR2004", # Magic values in tests are OK
    "ARG001", # Unused arguments in test fixtures
    "FBT001", # Boolean args OK in tests
]
"src/cli/*" = [
    "T201",   # Print statements OK in CLI
]
"**/migrations/*" = ["ALL"]
"__init__.py" = ["F401"]  # Unused imports OK in __init__.py

[lint.isort]
force-single-line = false
force-sort-within-sections = true
known-first-party = ["src", "tests"]
combine-as-imports = true
split-on-trailing-comma = true

[lint.mccabe]
max-complexity = 10

[lint.pylint]
max-args = 8
max-branches = 12
max-returns = 6
max-statements = 50

[lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[lint.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.Query",
    "fastapi.Body",
]

[lint.flake8-bandit]
check-typed-exception = true

[format]
# Formatting options
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 88
