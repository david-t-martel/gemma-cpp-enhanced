# GCP Authentication Configuration Template
# Copy this file to .env and fill in your values

# =============================================================================
# GCP Core Configuration
# =============================================================================

# Primary GCP project ID (required)
GCP_PROJECT_ID="your-gcp-project-id"

# GCP region for resources (default: us-central1)
GCP_REGION="us-central1"

# Authentication method (choose one):
# - "service_account" (recommended for production)
# - "application_default" (recommended for development)
# - "workload_identity" (for GKE workloads)
# - "compute_engine" (when running on GCE)
GCP_AUTH_METHOD="service_account"

# =============================================================================
# Service Account Authentication (when GCP_AUTH_METHOD=service_account)
# =============================================================================

# Path to service account JSON key file
# This will be set automatically by the setup scripts
GOOGLE_APPLICATION_CREDENTIALS=""

# Service account email (auto-populated by setup scripts)
GCP_CLIENT_EMAIL=""

# Individual service account fields (alternative to JSON file)
# Uncomment and fill these if you prefer environment variables over JSON file
# GCP_CLIENT_ID=""
# GCP_PRIVATE_KEY_ID=""
# GCP_PRIVATE_KEY=""  # Replace \n with actual newlines
# GCP_AUTH_URI="https://accounts.google.com/o/oauth2/auth"
# GCP_TOKEN_URI="https://oauth2.googleapis.com/token"
# GCP_AUTH_PROVIDER_CERT_URL="https://www.googleapis.com/oauth2/v1/certs"
# GCP_CLIENT_CERT_URL=""
# GCP_UNIVERSE_DOMAIN="googleapis.com"

# =============================================================================
# Workload Identity Federation (when GCP_AUTH_METHOD=workload_identity)
# =============================================================================

# Path to workload identity configuration JSON file
# GCP_WORKLOAD_IDENTITY_CONFIG=""

# =============================================================================
# Storage Configuration
# =============================================================================

# GCS bucket for model storage and artifacts (optional)
GCP_GCS_BUCKET=""

# GCS prefix for organized storage (default: gemma-models)
GCP_GCS_PREFIX="gemma-models"

# =============================================================================
# Model Configuration
# =============================================================================

# Local cache directory for downloaded models
GEMMA_MODEL_CACHE_DIR="${HOME}/.cache/gemma"

# Kaggle credentials for model downloads (optional)
KAGGLE_USERNAME=""
KAGGLE_KEY=""

# Hugging Face token for model downloads (optional)
HUGGINGFACE_TOKEN=""

# =============================================================================
# API Configuration
# =============================================================================

# Custom API endpoint override (optional)
GCP_API_ENDPOINT=""

# API timeout in seconds (default: 30)
GCP_API_TIMEOUT="30"

# API retry configuration
GCP_API_RETRY_COUNT="3"
GCP_API_RETRY_DELAY="1.0"

# =============================================================================
# Security Configuration
# =============================================================================

# Enable audit logging (default: true)
GCP_ENABLE_AUDIT_LOGGING="true"

# Enable encryption at rest (default: true)
GCP_ENABLE_ENCRYPTION="true"

# KMS key name for encryption (optional)
GCP_KMS_KEY_NAME=""

# =============================================================================
# Development Configuration
# =============================================================================

# Enable debug logging
DEBUG="false"

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL="INFO"

# Enable development mode features
DEVELOPMENT_MODE="false"

# =============================================================================
# Common GCP Project Examples (for reference)
# =============================================================================

# Example project configurations:
# GCP_PROJECT_ID="my-ml-project-123456"
# GCP_PROJECT_ID="production-analytics-456789"
# GCP_PROJECT_ID="dev-gemma-experiments"

# =============================================================================
# Service Account Email Examples (for reference)
# =============================================================================

# Typical service account email patterns:
# GCP_CLIENT_EMAIL="gcp-profile@my-project.iam.gserviceaccount.com"
# GCP_CLIENT_EMAIL="business-analytics@my-project.iam.gserviceaccount.com"
# GCP_CLIENT_EMAIL="gemma-ml-service@my-project.iam.gserviceaccount.com"

# =============================================================================
# Usage Instructions
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.template .env

# 2. Run the appropriate setup script:
#    Linux/Mac: ./scripts/setup-gcp-auth.sh
#    Windows:   .\scripts\setup-gcp-auth.ps1

# 3. The setup script will automatically detect gcp-profile service accounts
#    and populate the necessary environment variables

# 4. Verify your setup:
#    uv run python -c "from src.gcp import GCPConfig; print(GCPConfig.from_env())"

# 5. Source the environment (Linux/Mac):
#    source .env

# 6. For PowerShell (Windows), load variables:
#    Get-Content .env | ForEach-Object {
#        if($_ -match '^([^=]+)=(.*)$') {
#            Set-Item -Path "env:$($matches[1])" -Value ($matches[2] -replace '^"(.*)"$','$1')
#        }
#    }
# =============================================================================
# Gemini AI Configuration
# =============================================================================

# Gemini API key for AI-powered code review and optimization
# Get your key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=""

# Alternative: Can also use Google API key
# GOOGLE_API_KEY=""

# Gemini model selection (optional, defaults to gemini-1.5-flash)
# Options: gemini-pro, gemini-pro-vision, gemini-1.5-pro, gemini-1.5-flash
GEMINI_MODEL="gemini-1.5-flash"

# Gemini temperature for response generation (0.0-1.0, default: 0.3)
GEMINI_TEMPERATURE="0.3"

# Enable Gemini integration features (default: true)
GEMINI_ENABLED="true"
